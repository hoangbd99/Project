
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Chucnc
 */
public class Main extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form Main
     */
    int sizeGlo = 3;
    boolean flag = true,runTime=false;
    ArrayList<JButton> jb = new ArrayList<>();
    int currentTime = 0;
    int count;
    int space;

    public Main() {
        initComponents();
        String[] items = new String[7];
        int count = 0;
        for (int i = sizeGlo; i < sizeGlo+7; i++) {
            String s = String.valueOf(i);
            items[count] = s + "x" + s;
            count++;
        }
        DefaultComboBoxModel<String> cbxModel = new DefaultComboBoxModel<>(items);
        cbxSize.setModel(cbxModel);
        createGame(sizeGlo);
        Thread t = new Thread(this);
        t.start();
    }

    @Override
    public void run() {
        while (runTime == true) {
            try {
                currentTime = currentTime + 1;
                Thread.sleep(1000);
                lblTime.setText(String.valueOf(currentTime));

            } catch (InterruptedException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    private void createGame(int size) {
        jb.clear();
        this.setSize(400 + size * 10, 500 + size * 10);
        pnButton.removeAll();;
        pnButton.setLayout(new GridLayout(size, size, 10, 10));
        space = 0;
        for (int i = 0; i < size * size; i++) {
            JButton btn;
            if (i != 0) {
                btn = new JButton(Integer.toString(i));
            } else {
                btn = new JButton();
            }
            btn.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    addActionButton(e);
                }
            });
            pnButton.add(btn);
            jb.add(btn);
        }
        Random r = new Random();
        for (int i = 0; i < 100; i++) {
            move(r.nextInt(4));
        }
    }

    private int findLocation(JButton btn) {
        for (int i = 0; i < jb.size(); i++) {
            if (btn == jb.get(i)) {
                return i;
            }
        }
        return 0;
    }

    private void addActionButton(ActionEvent e) {
        if(runTime==false && flag==true){
            runTime=true;
            Thread t = new Thread(this);
            t.start();
        }
        JButton btn = (JButton) e.getSource();
        int loc = findLocation(btn);
        if(flag==true){
        if (loc == space + 1 || loc == space - 1 || loc == space + sizeGlo || loc == space - sizeGlo) {
            swap(btn, jb.get(space));
            space = loc;
            count++;
        }
        lblCount.setText(String.valueOf(count));
        if (space == sizeGlo*sizeGlo-1 && checkWin() == true) {
            flag = false;
            runTime=false;
            JOptionPane.showMessageDialog(null, "you win");
        }
        }
    }

    private void move(int dir) {
        int a = space % sizeGlo;
        int b = space / sizeGlo;
        switch (dir) {
            case 0:
                if (b != 0) {
                    swap(jb.get(space), jb.get(space - sizeGlo));
                    space -= sizeGlo;
                }
            case 1:
                if (a != sizeGlo - 1) {
                    swap(jb.get(space), jb.get(space + 1));
                    space += 1;
                }
            case 2:
                if (b != sizeGlo - 1) {
                    swap(jb.get(space), jb.get(space + sizeGlo));
                    space += sizeGlo;
                }
            case 3:
                if (a != 0) {
                    swap(jb.get(space), jb.get(space - 1));
                    space -= 1;
                }
        }
    }

    public void swap(JButton a, JButton b) {
        String s = a.getText();
        a.setText(b.getText());
        b.setText(s);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnInfor = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblCount = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbxSize = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        btnNewGame = new javax.swing.JButton();
        pnButton = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Move count:");

        lblCount.setText("0");

        jLabel2.setText("Elapsed:");

        lblTime.setText("0");

        jLabel3.setText("sec");

        jLabel4.setText("Size:");

        btnNewGame.setText("New game");
        btnNewGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewGameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnInforLayout = new javax.swing.GroupLayout(pnInfor);
        pnInfor.setLayout(pnInforLayout);
        pnInforLayout.setHorizontalGroup(
            pnInforLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnInforLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnInforLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnInforLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCount))
                    .addGroup(pnInforLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTime)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3))
                    .addGroup(pnInforLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbxSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnNewGame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        pnInforLayout.setVerticalGroup(
            pnInforLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnInforLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnInforLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblCount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnInforLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblTime)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnInforLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnNewGame)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnButtonLayout = new javax.swing.GroupLayout(pnButton);
        pnButton.setLayout(pnButtonLayout);
        pnButtonLayout.setHorizontalGroup(
            pnButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnButtonLayout.setVerticalGroup(
            pnButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 228, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnInfor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(pnButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(pnInfor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewGameActionPerformed
        // TODO add your handling code here:
        String ss = String.valueOf(cbxSize.getSelectedItem().toString().trim().charAt(0));
        sizeGlo = Integer.valueOf(ss);
        createGame(sizeGlo);
        currentTime = 0;
        count = 0;
        lblTime.setText("0");
        lblCount.setText("0");
        flag=true;
        runTime=false;
    }//GEN-LAST:event_btnNewGameActionPerformed
    private boolean checkWin() {
        for (int i = 0; i < jb.size() - 1; i++) {
            JButton btn = jb.get(i);
            if (!btn.getText().equals(Integer.toString(i + 1))) {
                return false;
            }
        }
        return true;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Main m = new Main();
                m.setVisible(true);
            }
        });

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNewGame;
    private javax.swing.JComboBox cbxSize;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblCount;
    private javax.swing.JLabel lblTime;
    private javax.swing.JPanel pnButton;
    private javax.swing.JPanel pnInfor;
    // End of variables declaration//GEN-END:variables

}
